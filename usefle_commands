# 2018年6月6日
## 环境配置
### 629台式机opencv：
- 多个版本 2.4.9（很久之前安装） 
- 3.2.0（install caffe时候安装10 April 2019）  
- 3.4.6（运行怂的MonocularVOScale时候安装18 April 2019），cmake 时候输出如下

```
--     Protobuf:                    build (3.5.1)
-- 
--   OpenCL:                        YES (no extra features)
--     Include path:                /home/timing/opencv-3.4.6/3rdparty/include/opencl/1.2
--     Link libraries:              Dynamic load
-- 
--   Python 2:
--     Interpreter:                 /home/timing/miniconda2/bin/python2.7 (ver 2.7.14)
--     Libraries:                   /usr/lib/x86_64-linux-gnu/libpython2.7.so (ver 2.7.14)
--     numpy:                       /home/timing/miniconda2/lib/python2.7/site-packages/numpy/core/include (ver 1.11.3)
--     install path:                lib/python2.7/site-packages/cv2/python-2.7
-- 
--   Python 3:
--     Interpreter:                 /usr/bin/python3 (ver 3.5.2)
--     Libraries:                   /usr/lib/x86_64-linux-gnu/libpython3.5m.so (ver 3.5.2)
--     numpy:                       /home/timing/.local/lib/python3.5/site-packages/numpy/core/include (ver 1.14.5)
--     install path:                lib/python3.5/dist-packages/cv2/python-3.5
-- 
--   Python (for build):            /home/timing/miniconda2/bin/python2.7
-- 
--   Java:                          
--     ant:                         NO
--     JNI:                         NO
--     Java wrappers:               NO
--     Java tests:                  NO
-- 
--   Install to:                    /usr/local
```

## Mac登陆629台式机
	ssh -X 192.168.1.126 
## 登陆二楼服务器
    ssh -p 252 timing@10.60.100.57
    ssh -p 252 rail@202.120.189.234
    安装在根目录～下，数据集等大容量文件放在 /mnt下(1.5T容量)
## 在629台式机运行闭环检测演示
    cd ~/Documents/DLoopDetector/Build
    ./demo_brief
## 利用DigitalOcean翻墙
    ssh root@165.227.24.141
    pw：ghh
    ssserver -c /etc/shadowsocks.json
## 压缩or解压文件
	tar  -xvf    *.tar          解压文件并存为原名字
	tar	 -xvf    file.zip       zip也可以用tar 
	tar  -cvf file.zip   file   将file压缩为file.zip

# tmux打开以前的terminal 0
tmux attach -t 0
# 将图像分成training和test脚本 
## 方法一： 王香伟的data_move.py 
先将所有图像名字生成一个list，从list中删除不需要移除的的图像的名称
运行
## 方法二：divide_train_test.py
详见divide_train_test.py
# tmux 使用快捷键
[详见文章](https://gist.github.com/ryerh/14b7c24dfd623ef8edc7)
# 将图像分成training和test脚本 
## 方法一： 王香伟的data_move.py 
先将所有图像名字生成一个list，从list中删除不需要移除的的图像的名称
运行
## 方法二：divide_train_test.py
详见divide_train_test.py

# vim 快捷键
yy复制这行 p粘贴

dd删除这行

f;x 向右跳到本行字符x处

跳到指定行：xgg，
如：跳到第25行
方法一：“25gg／G”
方法二: “：25”

ctrl + v，进入可视模式，选中全部行的第一列，最好的方式，shift + g 快速移动到最后一行；shift + i，进入 insert 模式；输入 #；两次 esc

# linux ternimal（端口）常用命令
计算该文件夹下文件数量 

	```ls ./ | wc -l```

把某一文件夹下的文件名称按顺序列入list
	```find `pwd`/AMOS_Data/00004534/2017_05/* | sort > list.txt```
	注：pwd两边的` `不是单引号是键盘左上角～那里的
	ctrl+a 回到行首
	ctrl+e 回到行尾
## 查看文件或文件夹的大小数量等
[参照blog](https://www.cnblogs.com/uzipi/p/6100790.html)
** 查看当前目录下的文件数量（不包含子目录中的文件）**```ls -l|grep "^-"| wc -l```\

**查看当前目录总共占的容量。而不单独列出各子项占用的容量**```du -sh ```

**查看当前目录下一级子文件和子目录占用的磁盘容量**```du -lh --max-depth=1 ```

**统计当前文件夹(目录)大小，并按文件大小排序**```du -sh * | sort -n ```

**查看指定文件大小**```du -sk filename ```
**查看文件大小**```du -h folder_name```

**查看硬盘大小**```df -h```

**解压zip文件**
unzip file.zip -d destination_folder

如果该zip文件破损可能会报：
“unzip:  cannot find zipfile directory in one of robocar.zip or
        robocar.zip.zip, and cannot find robocar.zip.ZIP, period.”

改用更鲁棒的 ```jar xvf COCR2_100.zip```

**查看文件生成及改动时间**
 ```stat filename```
## 改上层文件夹权限
	chomd 
	chown
	sudo chown user -R file_name
	eg. sudo chown timing -R StarGAN_Norland##
# python 版本是2.7

# 用conda安装了新的python
使用前需要先激活tensorflow的环境  
	source activate tensorflow	
# tmux快捷键
*进入训练StarGAN的tmux*
	tmux a -t StarGAN
ctrl+b：
	c:新建windows
	%：竖着分屏
	“：横着分屏
	z：把这个屏最大或者恢复最小化
	数字n：回到第n个session（每个session包含多个windows）
	ctrl+d：关闭bash
	<--,-->:按住上下左右箭头可以调整windows大小
# 进入docker
## tensorflow
	docker挂载共享本地文件目录
	sudo nvidia-docker run -it -v /home/timing/:/home/timing/ tensorflow/tensorflow:latest-gpu bash
##  pytorch
	sudo nvidia-docker run -it -v /home/timing/:/home/timing/ zhanghui/pytorch:cu80 bash
	
在运行docker的时候直接运行程序怂蛋帮我改了进入docker的bash

```sudo nvidia-docker run -e CUDA_VISIBLE_DEVICES=2 -v /home/timing/:/home/timing/ zhanghui/pytorch:cu80 python3 home/timing/Git_Repos_Summer/Pytorch_GAN_CycleGAN/cyclegan.py```

运行时只要   
```sh train.sh```

# 2018年7月24日
用灰色小图Norland（在StarGAN目录下的RaFD文件夹下）数据集train上了StraGAN看一下效果吧  估计还是要换成大的彩色图像
# scp file/folder 
把mac文件夹copy到二楼
```sudo scp -r -P 252 Image0 timing@10.60.100.57:~/```

将二楼的图片scp到Mac
```scp -P 252 timing@10.60.100.57:/home/timing/StarGAN_Norland/Norland_Images/train/summer_copy/*.png ~/Desktop/temp/```

将二楼的图片scp到小九上
```scp -P 252 ... zhanghui@192.168.1.126:~/Desktop/temp/```

**scp常见错误:**

**将a文件夹存到存到b文件夹下面**
scp -r a b/   

**将a文件夹存到存为a文件夹**
scp -r a b      

ps: 
	"..."代表文件（夹）的路径及名称   如果在当前目录下不需要'./'
	二楼的数据集位置/mnt/datasets不能直接copy过去
	python file_a/a.py运行时候 a.py里面的路径是指当对于当前命令执行所在的文件夹 ，不是指python文件的路径
# git上传本地库到网站
	1. git add -A    添加所有文件（不需要上传的文件可以删除或者放在/.ignore里面）
	2. git remote rm origin
	3. git remote add origin http://github.com//..... 
	(2.3也可以用一句代替 git remote set-url origin https://github.com/SummerHuiZhang/*.git)
	4. git push -u origin master
# 查找重复文件（夹）
安装了fdupes 
使用方法：
	fdupes -S  文件夹（含绝对路径）：查看重复文件
	fdupes -r  文件夹（含绝对路径）：搜索重复文件
	fdupes -Sr 文件夹（含绝对路径）：搜索并查看重复文件
	fdupes -S 文件夹1  文件夹2  ：查看文件夹1和2有哪些重复文件
# 查看文件属性
ls -al        读写权限
file 文件名    文件类型
	
# ffmpeg将视频截取成图像
	ffmpeg -i Spring.mp4 -r 0.1 -f image2 image%6d.png 
ps：这里的第五个参数0.1为帧率，表示每10秒存为一副图像，

# 将文件名称写到txt文件
find train/spring/  |sort > test.txt

cat test.txt  //查看生成的txt文件
# cnvert text into array
	file = open ("test_imagenames.txt", "r")	
	x = []
	for item in file:
    x.append(item.split ('\s'))
	a = np.array(x)
	print(a[:1])
# 遇到的bug
inconsistent use of tabs and spaces in indentation
混用了tab和4个空格造成的，检查代码，要不全部用tab，要不全部用4个空格，或者用idle编辑器校正
# 安装deb类app比如mendeley
dpkg --force-depends -i a.deb
# Ubuntu基本快捷键

Alt + Tab   在不同程序窗口间切换

关闭当前窗口 = Alt + F4

截取全屏 = Print Screen

截取窗口 = Alt + Print Screen

Win+E - 显示所有桌面，方便的左右选择。

Alt+Ctrl+Left/Right Arrow -切换桌面

Alt+Ctrl+Shift+Left/Right Arrow – 移动当前窗口到其他桌面

Alt + Shift+ Up Arrow – 以很酷的方式显示当前窗口

Alt+F9/F10 – 最小化/最大化当前窗口

Alt+F5 -不最大化当前窗口

 Alt+F7 – 激活当前窗口的移动选项，你可以使用方向键移动当前窗口，甚至移动到其他桌面。

Alt+F8 – 用方向键调整当前窗口大小

Win + 鼠标滚轮 – 放大/缩小屏幕

Ctrl + Alt + L -锁屏

Alt+ Tab – 切换窗口
## 一些终端输命令时常用到的快捷键

tab=补全

ctrl+a=开始位置

ctrl+e=最后位置

ctrl+k=删除此处至末尾所有内容

ctrl+u=删除此处至开始所有内容

ctrl+d=删除当前字母

ctrl+w=删除此处到左边的单词

ctrl+y=粘贴由ctrl+u，ctrl+d，ctrl+w删除的单词

ctrl+r=正在测试，还没弄明白，呵呵。

ctrl+l=相当于clear

ctrl+b=向回移动

ctrl+f=向前移动

ctrl+p=向上显示缓存命令

ctrl+n=向下显示缓存命令

ctrl+d=关闭终端

shift+上或下=终端上下滚动

shift+pgup或pgdown=终端上下翻页滚动

ctrl+shift+f=全屏（仅限于konsole）

ctrl+shift+n=新终端（terminal和konsole有所不同）

ctrl+c=终止
## 文件浏览器（部分）

Ctrl+H 显示隐藏文件（切换键）

Ctrl+T 新建标签

Ctrl+W 关闭标签

Ctrl+Page Up 上一个标签

Ctrl+Page Down 下一个标签

Alt+N 切换到第N个标签（N为数字）

查看opencv版本号
：python
：import cv2 
：cv2.__version__         629台式机的版本号是3.4.3

629台式机上又下载了一个2.4.11  opencv切换方法见：https://blog.csdn.net/learning_tortosie/article/details/80594399
大致：
```gedit ~/.bashrc```
## 在文件末尾增加以下内容
```export PKG_CONFIG_PATH=～/opencv-3.4.1/build/installed/lib/pkgconfig```
```export LD_LIBRARY_PATH=～/opencv-3.4.1/build/installed/lib``
## 更新~/.bashrc
```source ~/.bashrc ```
## 查询OpenCV版本
```pkg-config --modversion opencv```
## 查看linux版本
```sudo lsb_release -a```
## 在629查看二楼服务器的运行结果
ssh -P 252 timing@10.60.100.57 -Y
查看二楼的照片feh image_name.png

# 注意事项
**“/”** config.yaml等文件里面的位置后面要不要加**反斜杠:**需要的是当前文件夹还是文件夹里面的文件

**datasets VS dataset**

**夹的名称要一致，尤其是首字母的大小写***

# 本地查看GAN网络的变化过程
在本地显示tensorboard运行loss结果 参考博客 在本地运行： ssh -L 16006:127.0.0.1:6006 -p 252 timing@10.60.100.57 登录到二楼服务器后运行： tensorboard --logdir=logs_path bug：locale.Error: unsupported locale setting 原因：locale setting问题说明是转型问题，编码方式不统一导致的结果。 *解决办法： export LANGUAGE=en_US.UTF-8 export LC_ALL=en_US.UTF-8 最后，在本地访问地址：http://127.0.0.1:16006/

# out of memory问题
跑网络时如果‘out of memory’，模型太大空间不够

方法一：把batch_size epoch改小一些就好了。
方法二：改用GPU，命令 CUDA_VISIBLE_DEVICES=2 python train.py
方法三：查看gpu使用情况，把假的kill掉
方法四：用docker运行 使空间变小了，可以指定运行space大小 指定运行路径

```cd /home/timing/Git_Repos_Summer/PyTorch-GAN/implementations/cyclegan/ sudo nvidia-docker run --shm-size 60G --workdir=`pwd` -e CUDA_VISIBLE_DEVICES=0,1,3 -v /home/timing/:/home/timing/ zhanghui/pytorch:cu80 python3 cyclegan.py ```

 htop 
 kill
 
 IndentationError: unexpected indent  python中多打或者少打了空格，python对对齐要求很高


[Sublime自动补全教程](https://blog.csdn.net/qq_27366789/article/details/80666343)



# python 2 3的区别示例
[dict.keys()改成list(dict.keys())[index]](https://blog.csdn.net/chienchia/article/details/40887831)

xrange改成range

[python常见错误集锦](https://blog.csdn.net/proplume/article/details/78899616)

### python函数使用blog：

[split
os.path.split()
os.path.splitext()](https://blog.csdn.net/zzc15806/article/details/81352742)

[判断一个字符串是否包含子串的几种方法](https://blog.csdn.net/yl2isoft/article/details/52079960)
# Q:不使用sh脚本　如何使用torch
A: 使用conda:  conda activate cc_zp

#detach的作用：
detach的方法，将variable参数从网络中隔离开，不参与参数更新。

#
